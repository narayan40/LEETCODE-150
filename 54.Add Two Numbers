/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans=new ListNode(-1);
        ListNode* temp=ans;
         int sum=0;
        while(l1!=NULL && l2!=NULL){
            int a=l1->val;
            int b=l2->val;
            sum+=a+b;
            int digit=sum%10;
            ListNode* Digit=new ListNode(digit);
            temp->next=Digit;
            sum=sum/10;
            l1=l1->next;
            l2=l2->next;
            temp=temp->next;
        }
        while(l1!=NULL){
           sum+=l1->val;
           int digit=sum%10;
            ListNode* Digit=new ListNode(digit);
            temp->next=Digit;
            sum=sum/10;
             l1=l1->next;
             temp=temp->next;
        }
          while(l2!=NULL){
           sum+=l2->val;
           int digit=sum%10;
            ListNode* Digit=new ListNode(digit);
            temp->next=Digit;
            sum=sum/10;
             l2=l2->next;
             temp=temp->next;
        }
        while(sum!=0){
              int digit=sum%10;
            ListNode* Digit=new ListNode(digit);
            temp->next=Digit;
            sum=sum/10;
            // l2=l2->next;
             temp=temp->next;
        }
         return ans->next;   
    }
};
