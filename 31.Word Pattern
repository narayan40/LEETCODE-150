class Solution {
public:
    bool wordPattern(string pattern, string s) {
        	vector<string> words;
	string temp="";
	for(int i=0;i<s.length();i++){
		if(i+1==s.length()){
			temp.push_back(s[i]);
			words.push_back(temp);
			break;
		}
	    if(s[i]==' '){
	    	words.push_back(temp);
	    	temp="";
	    	continue;
		}else{
			temp.push_back(s[i]);
		}	
	}
    map<char,string> cs;
    map<string,char> sc;
    if(pattern.length()!=words.size()){
        return false;
    }
    for(int i=0;i<pattern.length();i++){
        if(cs.find(pattern[i])==cs.end()){
            cs[pattern[i]]=words[i];
        }
        else{
            if(cs[pattern[i]]!=words[i])
            return false;
        }
    }
    for(int i=0;i<words.size();i++){
        if(sc.find(words[i])==sc.end()){
            sc[words[i]]=pattern[i];
        }
        else{
            if(sc[words[i]]!=pattern[i])
            return false;
        }
    }
    return true;
    }
};
